defaultTasks 'compileLaTeX'

apply plugin: 'base'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:0.5'
    }
}

buildDir.mkdirs()

import de.undercouch.gradle.tasks.download.Download

task downloadPromptList(type: Download) {
    def promptsFile = 'cmuarctic.data'
    src "http://festvox.org/cmu_arctic/$promptsFile"
    dest buildDir
    overwrite false
    outputs.files file("$buildDir/$promptsFile")
}

task generateText(dependsOn: downloadPromptList) {
    def promptsFile = downloadPromptList.outputs.files.singleFile
    inputs.files promptsFile
    outputs.files fileTree(buildDir).include('*.txt')
    doLast {
        promptsFile.eachLine {
            def fields = it.split('[()" ]{2}')
            def (basename, text) = fields[1..2]
            file("$buildDir/${basename}.txt").withWriter { it.println(text) }
        }
    }
}

task synthesizeBeep(type: Exec) {
    def beepWavFile = file("$buildDir/$beepWavFileName")
    outputs.files beepWavFile
    executable sox
    args '-n', beepWavFileName, 'synth', beepDuration, 'sin', beepFrequency
    workingDir buildDir
}

task transcodeBeep(type: Exec, dependsOn: synthesizeBeep) {
    def beepFile = file("$buildDir/$beepFileName")
    def beepWavFile = file("$buildDir/$beepWavFileName")
    outputs.files beepFile
    executable lame
    args beepWavFile, beepFile
    workingDir buildDir
}

def maskTeXChars(String str) {
    // mask special characters for latex
    return str.replaceAll("([&_])", '\\\\$1')
}

task generateLaTeX(dependsOn: downloadPromptList) {
    def promptsFile = downloadPromptList.outputs.files.singleFile
    def texFile = file("$buildDir/prompts.tex")
    inputs.files promptsFile
    outputs.files texFile
    doLast {
        texFile.withWriter { tex ->
            tex.println """% !TEX encoding = UTF-8 Unicode
                           |\\documentclass[aspectratio=${aspectRatio.replace('x', '')}]{beamer}
                           |\\usepackage[utf8]{inputenc}
                           |\\usepackage[activate=pageopen, transparent, noplaybutton]{media9}
                           |\\newcommand*{\\prompt}[2]{%
                           |\\begin{frame}{#1}
                           |\\centering
                           |{\\Huge #2}
                           |\\includemedia[addresource=$beepFileName, width=1em, height=1ex, flashvars={source=$beepFileName&autoPlay=true&hideBar=true}]{}{APlayer.swf}
                           |\\end{frame}}
                           |\\title{${maskTeXChars(project.name)}}
                           |\\date{}
                           |\\begin{document}
                           |\\frame{\\titlepage}""".stripMargin()
            promptsFile.eachLine {
                def fields = maskTeXChars(it).split('[()" ]{2}')
                def (basename, text) = fields[1..2]
                tex.println "\\prompt{$basename}{$text}"
            }
            tex.println "\\end{document}"
        }
    }
}

task compileLaTeX(type: Exec, dependsOn: [generateLaTeX, transcodeBeep]) {
    def texFile = generateLaTeX.outputs.files.singleFile
    inputs.files texFile, synthesizeBeep.outputs.files.singleFile
    outputs.files file("$buildDir/prompts.pdf")
    executable 'latexmk'
    args '-quiet', '-pdf', texFile
    workingDir buildDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
